---
- name: Install Apache Web Server
  hosts: [server]
  become: yes

  tasks:
    - name: Print OS Family
      debug:
        var: ansible_os_family

    - block: #====== Block for Debian ======
        - name: Updating repos for Ubuntu
          apt:
            update_cache: yes

        - name: Install Apache for Ubuntu
          apt:
            name: apache2
            state: latest

        - name: Start Apache and enable autoboot (Ubuntu)
          service:
            name: apache2
            state: started
            enabled: yes

        - name: Installing Unzip for Ubuntu
          apt:
            name: unzip
            state: latest

      when: ansible_os_family=="Debian"

    - name: Copy conf_file on remote hosts
      copy:
        src: /etc/apache2/sites-available/000-default.conf
        dest: /etc/apache2/sites-available/{{ folder }}.conf
        remote_src: true

    - name: Copy ssl_conf_file on remote hosts
      copy:
        src: /etc/apache2/sites-available/default-ssl.conf
        dest: /etc/apache2/sites-available/{{ folder }}_ssl.conf
        remote_src: true

    - name: Add a single line in conf_file 1
      lineinfile:
        dest: /etc/apache2/sites-available/{{ folder }}.conf
        regexp: '^'
        insertafter: '  #ServerName www.example.com'
        line: '  ServerName {{ folder }}.it-primyshev.site'
        state: present

    - name: Change strings into conf_file
      lineinfile:
        path: "/etc/apache2/sites-available/{{ folder }}.conf"
        regexp: "DocumentRoot /var/www/html"
        line: "DocumentRoot /var/www/html/{{ folder }}"
        
        
    - name: Change strings into conf_file TEMPLATE
      lineinfile:
        line: "{{ item.line }}"
        regexp: "{{ item.regexp }}"
        path: "/etc/httpd/sites-available/my_web_site.conf"
      loop:
        - line: "    ErrorLog /var/log/error.log"
          regexp: "    ErrorLog \\$\\{APACHE_LOG_DIR\\}/error.log" # обязательно экранируем все спецсимволы
        - line: "    CustomLog /var/log/access.log combined"
          regexp: "    CustomLog \\$\\{APACHE_LOG_DIR\\}/access.log combined" # обязательно экранируем все спецсимволы
      notify:
        - Restart Apache RedHat

    - name: Add string
      lineinfile:
        state: present
        insertafter: EOF
        dest: /etc/httpd/conf/httpd.conf
        line: "IncludeOptional sites-enabled/*.conf"







    - name: Downloading my website from github.com
      get_url:
        url: https://github.com/01Yura/{{ folder }}_web_site/archive/refs/heads/main.zip
        dest: /var/www/html/
      
    - name: Extracting archive
      unarchive:
        remote_src: yes
        src: /var/www/html/{{ folder }}_web_site-main.zip
        dest: /var/www/html/

    - name: Deleting .github
      file:
        path: /var/www/html/{{ folder }}_web_site-main/.github
        state: absent

    - name: Deleting README.md
      file:
        path: /var/www/html/{{ folder }}_web_site-main/README.md
        state: absent

    - name: Deleting archive
      file:
        path: /var/www/html/{{ folder }}_web_site-main.zip
        state: absent

    - name: Creating directory for site
      ansible.builtin.file:
        path: /var/www/html/{{ folder }}
        state: directory

    - name: Deleting all in site directory
      shell: rm /var/www/html/{{ folder }}/*
      ignore_errors: yes

    - name: Copying files
      shell: cp /var/www/html/{{ folder }}_web_site-main/{{ folder }}/* /var/www/html/{{ folder }}/

    - name: Deleting web_site-main
      file:
        path: /var/www/html/{{ folder }}_web_site-main
        state: absent

  handlers:

    - name: Executing a2ensite
      shell: a2ensite {{ folder }}.conf {{ folder }}_ssl.conf

    - name: Restart Apache Centos
      service:
        name: httpd
        state: restarted
      when: ansible_os_family=="RedHat"

    - name: Restart Apache Debian
      service:
        name: apache2
        state: restarted
      when: ansible_os_family=="Debian"
